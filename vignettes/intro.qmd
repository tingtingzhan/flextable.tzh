---
title: "flextable.tzh"
author: Tingting Zhan
format: 
  html:
    page-layout: full
    html-math-method: katex
toc: true
toc-location: left
toc-depth: 4
toc-title: ''
editor: visual
knitr:
  opts_chunk: 
    collapse: true
    comment: "#>" 
vignette: >
  %\VignetteIndexEntry{intro}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
---

# Introduction

This vignette of package **`flextable.tzh`** ([Github](https://github.com/tingtingzhan/flextable.tzh)) documents ...

## Note to Students

Examples in this vignette require that the `search` path has

```{r}
library(flextable.tzh)
library(scales.tzh)
```


# Additional Dispatches for `S3` Generic `as_flextable()`

## `matrix`

The `S3` method dispatch `as_flextable.matrix()` ..

We do not want to override the functionality of `flextable:::as_flextable.table()`.

```{r}
m = array(letters[1:6], dim = 2:3, dimnames = list(row = letters[1:2], col = LETTERS[1:3]))
m |> as_flextable()
```

## `data.frame`

### `hline_by()`

```{r}
datasets::sleep |>
  hline_by(i = ~ group)
```

```{r}
datasets::women |>
  hline_by(i = ~ cut(height, breaks = c(55, 60, 65, 70)))
```

```{r}
datasets::Puromycin |>
hline_by(i = ~ state + conc)
```

### `format4flextable()`

```{r}
library(survival)
aml2 = aml |>
  within.data.frame(expr = {
    edp = Surv(time, status)
    time = status = NULL
  })
```

Function `flextable:::as_flextable.data.frame()` cannot process `matrix` columns, as of version `r packageVersion('flextable')`.


```{r}
tryCatch(as_flextable(aml2), error = identity)
```

```{r}
aml2 |> 
  format4flextable() |> 
  flextable()
```

## `dist`

The `S3` method dispatch `as_flextable.dist()` ..

```{r}
USJudgeRatings[1:4,] |> 
  dist() |> 
  as_flextable()
```

## `ftable`

The `S3` method dispatch `as_flextable.ftable()` ..

```{r}
esoph |>
  xtabs(formula = cbind(ncases, ncontrols) ~ tobgp) |>
  ftable() |>
  as_flextable()
```

```{r}
esoph |>
  xtabs(formula = cbind(ncases, ncontrols) ~ .) |>
  ftable() |>
  as_flextable()
```

## `aov`

```{r}
op = options(contrasts = c("contr.helmert", "contr.poly"))
```

```{r}
aov(yield ~ block + N*P*K, data = npk) |> 
  as_flextable()
```

```{r}
aov(yield ~ block + N * P + K, npk) |> 
  as_flextable()
```

```{r}
aov(yield ~  N*P*K + Error(block), data = npk) |> # 'aovlist'
  as_flextable()
```

## `TukeyHSD`

The `S3` method dispatch `as_flextable.TukeyHSD()` ..

```{r}
fm1 = aov(breaks ~ wool + tension, data = warpbreaks)
```

```{r}
fm1 |> 
  TukeyHSD(which = 'tension') |> 
  as_flextable()
```

```{r}
fm1 |> 
  TukeyHSD() |> 
  as_flextable()
```

## `pairwise.htest`

```{r}
aq = airquality |> 
  within.data.frame(expr = {
    Month = factor(Month, labels = month.abb[5:9])
  }) |>
  with(expr = pairwise.t.test(Ozone, Month, pool.sd = FALSE, p.adj = 'none'))
```

The S3 method dispatch `as_flextable.pairwise.htest()` ..

```{r}
aq |>
  as_flextable()
```

```{r}
aq |>
  p_adjust_() |>
  label_pvalue_sym()() |>
  as_flextable()
```

```{r}
smokers = c(83L, 90L, 129L, 70L)
patients = c(86L, 93L, 136L, 82L)
pairwise.prop.test(smokers, patients, p.adj = 'none') |>
  suppressWarnings() |>
  p_adjust_() |>
  label_pvalue_sym()() |>
  as_flextable()
```

## `matchit`

```{r}
library(MatchIt)
# ?MatchIt::lalonde 
# `treat` is the treatment arm (0/1), `re78` is the outcome
```

```{r}
m1 = matchit(treat ~ age+educ+race+nodegree+married+re74+re75, data = lalonde)
m1 |> as_flextable()
```

```{r}
m1 |> as_flextable(addlvariables = 're78')
```

```{r}
m1 |> Sprintf.matchit()
```

```{r}
m1 |> summary(addlvariables = 're78') |> Sprintf.summary.matchit()
```

```{r}
m2 = matchit(treat ~ age+educ+race+nodegree+married+re74+re75, data = lalonde, ratio = 2)
```

```{r}
m2 |> as_flextable()
```

```{r}
m2 |> as_flextable(addlvariables = 're78')
```

# Other Functions

## `subset_()`

```{r}
subset_(trees, Girth > 9 & Height < 70)
```

```{r}
subset_(swiss, Fertility > 80, avoid = 'Catholic')
```

```{r}
subset_(warpbreaks, wool == 'K')
```

## `symmetric2flextable()`

```{r}
cov(trees, use = 'pairwise.complete.obs') |>
  symmetric2flextable(digits = 3L)
```

```{r}
cor(trees, use = 'pairwise.complete.obs') |>
  symmetric2flextable(digits = 3L)
```


# Appendix 

## Terms and Abbreviations

| Term / Abbreviation | Description |
|------------------------------------|------------------------------------|
| [`|>`](https://search.r-project.org/R/refmans/base/html/pipeOp.html) | Forward pipe operator introduced in `R` 4.1.0 |
| `$` | [Extract](https://search.r-project.org/R/refmans/base/html/Extract.html) parts of an object', |
| [`aov`](https://search.r-project.org/R/refmans/stats/html/aov.html) | [`anova`](https://search.r-project.org/R/refmans/stats/html/anova.html) |
| `CRAN`, `R` | [The Comprehensive R Archive Network](https://cran.r-project.org) |
| [`class`](https://search.r-project.org/R/refmans/base/html/class.html) | Object class |
| [`data.frame`](https://search.r-project.org/R/refmans/base/html/data.frame.html) | Data frame |
| [`dist`](https://search.r-project.org/R/refmans/stats/html/dist.html) | Distance Matrix |
| [`flextable`](https://search.r-project.org/CRAN/refmans/flextable/html/flextable.html), [`as_flextable`](https://search.r-project.org/CRAN/refmans/flextable/html/as_flextable.html) | (Convert objects into) flexable table |
| [`ftable`](https://search.r-project.org/R/refmans/stats/html/ftable.html) | Flat contingency tables |
| [`L`](https://adv-r.hadley.nz/vectors-chap.html#atomic-vectors) | [Integer](https://search.r-project.org/R/refmans/base/html/integer.html) notation |
| [`label_percent`](https://search.r-project.org/CRAN/refmans/scales/html/label_percent.html) | Label for percentages |
| [`matchit`](https://search.r-project.org/CRAN/refmans/MatchIt/html/matchit.html) | Matching for causal inference |
| [`matrix`](https://search.r-project.org/R/refmans/base/html/matrix.html) | Matrix |
| [`p.adjust`](https://search.r-project.org/R/refmans/stats/html/p.adjust.html) | Adjust $p$-values for multiple comparisons |
| `pairwise.htest` | Returned object class of [`pairwise.prop.test`](https://search.r-project.org/R/refmans/stats/html/pairwise.prop.test.html), [`pairwise.t.test`](https://search.r-project.org/R/refmans/stats/html/pairwise.t.test.html), [`pairwise.wilcox.test`](https://search.r-project.org/R/refmans/stats/html/pairwise.wilcox.test.html) |
| `S3`, `generic`, [`methods`](https://search.r-project.org/R/refmans/utils/html/methods.html) | `S3` object oriented system, [`UseMethod`](https://search.r-project.org/R/refmans/base/html/UseMethod.html); [`getS3method`](https://search.r-project.org/R/refmans/utils/html/getS3method.html); <https://adv-r.hadley.nz/s3.html> |
| [`search`](https://search.r-project.org/R/refmans/base/html/search.html) | Search path |
| [`TukeyHSD`](https://search.r-project.org/R/refmans/stats/html/TukeyHSD.html) | Tukey honest significant differences |
| [`typeof`](https://search.r-project.org/R/refmans/base/html/typeof.html) | Type of an object |

